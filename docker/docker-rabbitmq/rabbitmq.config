# logging dir
log.file = rabbit.log
log.dir = /mnt/

# debug logging level
log.file.level = debug
log.default.level = debug
#log.connection.level = info
#log.channel.level = info
#log.queue.level = info
#log.mirroring.level = info
#log.federation.level = info
#log.upgrade.level = info

## Send all logs to stdout/TTY
log.console = true
log.console.level = debug

## allow access to the guest user from anywhere on the network
loopback_users.guest = false

# ports
listeners.tcp.default = 5672
management.tcp.port = 15672
stomp.listeners.tcp.1 = 127.0.0.1:61613
#stomp.listeners.tcp.2 = ::1:61613
stomp.listeners.ssl.1 = 127.0.0.1:61614
#stomp.listeners.ssl.2 = ::1:61614

## authentication
#auth_backends.1 = internal
#auth_backends.2 = amqp
#
#auth_amqp.username = guest
#auth_amqp.vhost = /
#auth_amqp.exchange = authentication

# authentication
auth_backends.1 = internal
auth_backends.2 = http

auth_http.http_method   = post
# auth_http.user_path     = http://172.17.0.1:8080/rabbitmq/user
# auth_http.vhost_path    = http://172.17.0.1:8080/rabbitmq/vhost
# auth_http.resource_path = http://172.17.0.1:8080/rabbitmq/resource
# auth_http.topic_path    = http://172.17.0.1:8080/rabbitmq/topic
# auth_http.user_path     = http://192.168.50.232:8080/rabbitmq/user
# auth_http.vhost_path    = http://192.168.50.232:8080/rabbitmq/vhost
# auth_http.resource_path = http://192.168.50.232:8080/rabbitmq/resource
# auth_http.topic_path    = http://192.168.50.232:8080/rabbitmq/topic
# auth_http.user_path     = 192.168.50.232:8080/rabbitmq/user
# auth_http.vhost_path    = 192.168.50.232:8080/rabbitmq/vhost
# auth_http.resource_path = 192.168.50.232:8080/rabbitmq/resource
# auth_http.topic_path    = 192.168.50.232:8080/rabbitmq/topic
auth_http.user_path     = http://172.17.0.2:8080/rabbitmq/user
auth_http.vhost_path    = http://172.17.0.2:8080/rabbitmq/vhost
auth_http.resource_path = http://172.17.0.2:8080/rabbitmq/resource
auth_http.topic_path    = http://172.17.0.2:8080/rabbitmq/topic

# stomp default user
stomp.default_vhost = /
stomp.default_user = guest
stomp.default_pass = guest

# stomp tcp config
stomp.tcp_listen_options.backlog = 4096
stomp.tcp_listen_options.recbuf  = 196608
stomp.tcp_listen_options.sndbuf  = 196608
stomp.tcp_listen_options.linger.on = true
stomp.tcp_listen_options.linger.timeout = 0
stomp.tcp_listen_options.keepalive = true
stomp.tcp_listen_options.nodelay   = true
stomp.tcp_listen_options.exit_on_close = true
stomp.tcp_listen_options.send_timeout  = 120

# ssl config
ssl_options.cacertfile = /home/testca/cacert.pem
ssl_options.certfile   = /home/server/cert.pem
ssl_options.keyfile    = /home/server/key.pem
# ssl_options.verify     =  verify_peer
# ssl_options.fail_if_no_peer_cert = true

#test
ssl_options.verify     =  verify_none
ssl_options.fail_if_no_peer_cert = false

# management.cors.allow_origins.1 = *

#web_stomp 
web_stomp.tcp.port = 61611

# stomp tcp config
web_stomp.ssl.port = 61612
web_stomp.ssl.backlog = 4096
web_stomp.ssl.certfile   = /home/server/cert.pem
web_stomp.ssl.keyfile    = /home/server/key.pem
web_stomp.ssl.cacertfile = /home/testca/cacert.pem
web_stomp.ssl.password = guest123

#web_stomp.ssl.recbuf  = 196608
#web_stomp.ssl.sndbuf  = 196608
#web_stomp.ssl.linger.on = true
#web_stomp.ssl.linger.timeout = 0
#web_stomp.ssl.keepalive = true
#web_stomp.ssl.nodelay   = true
#web_stomp.ssl.exit_on_close = true
#web_stomp.ssl.send_timeout  = 120
#
